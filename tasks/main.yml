---
###############################################################################
# NOTE: Anything that is in here is done every time you call the tripleo_role #
# This means you should add variable parsing and settings here.               #
# This should mimic the conditions section from tripleo-heat-templates        #
###############################################################################

- name: Set passthrough vars for qdr_config role
  set_fact:
    addresses: "{{ qdr_addresses }}"
    autolink_addresses: "{{ qdr_autolink_addresses }}"
    connectors: "{{ qdr_connectors }}"
    extra_listeners: "{{ qdr_extra_listeners }}"
    listener_auth_peer: "{{ qdr_listener_auth_peer }}"
    listener_port: "{{ qdr_listener_port }}"
    listener_require_ssl: "{{ qdr_listener_require_ssl }}"
    listener_sasl_mech: "{{ qdr_listener_sasl_mech }}"
    listener_ssl_cert_db: "{{ qdr_listener_ssl_cert_db }}"
    listener_ssl_cert_file: "{{ qdr_listener_ssl_cert_file }}"
    listener_ssl_key_file: "{{ qdr_listener_ssl_key_file }}"
    password: "{{ qdr_password }}"
    router_mode: "{{ qdr_router_mode }}"
    ssl_password: "{{ qdr_listener_ssl_password }}"
    ssl_profiles: "{{ qdr_ssl_profiles }}"
    ssl_pw_file: "{{ qdr_listener_ssl_pw_file }}"
    trusted_certs: "{{ qdr_listener_trusted_certs }}"
    username: "{{ qdr_username }}"

- debug:
    var: service_net_map

- debug:
    var: net_vip_map

- debug:
    var: tripleo_role_name

# *CS
# Q1. Alex Schultz suggested I consider moving this back to THT. It's so much more readable and testable here.
#     Comments?
# Q2. I added a snake_case filter to help with changing tripleo_role_name == "CephStorage" into ceph_storage. I was
#     looking for the code that does the initial conversion so I could hopefully reuse it or at least behave the same.
- name: Set listener address based on ServiceNetMap
  set_fact:
    listener_addr: "{{ hostvars[inventory_hostname][service_net_map[(tripleo_role_name | snake_case) + '_metrics_qdr_network'] + '_ip'] }}"

- debug:
    msg: "listener_addr: {{listener_addr}}"

- name: Augment ssl_profiles with internal profile if required
  set_fact:
    ssl_profiles: "{{ ssl_profiles +
                     [{ 'name': 'tlsProfile',
                        'certFile': listener_ssl_cert_file,
                        'keyFile': listener_ssl_key_file,
                        'caCertFile': tripleo_internal_tlscafile
                      }] }}"
  when: tripleo_enable_internal_tls

# Copied everything below from qdr-container-puppet.yaml
    # This one doesn't seem used even in legacy puppet-qdr?
          # - tripleo::profile::base::metrics::qdr::external_listener_addr:
          #     get_param: [EndpointMap, MetricsQdrPublic, host]

# *****

# # These could be constructed in ansible from listener_ssl_cert_file and listener_ssl_key_file

          #         - - name: 'tlsProfile'
          #             certFile: '/etc/pki/tls/certs/metrics_qdr.crt'
          #             keyFile: '/etc/pki/tls/private/metrics_qdr.key'
# # This is already in ansible as tripleo_internal_tlscafile
          #             caCertFile: {get_param: InternalTLSCAFile}

# # These could be constructed in ansible from listener_ssl_cert_file and listener_ssl_key_file
# Adding this to the list of ssl_profiles we feed through
          #     tripleo::profile::base::metrics::qdr::ssl_profiles:
          #       list_concat:
          #         - get_param: MetricsQdrSSLProfiles
          #         - - name: 'tlsProfile'
          #             certFile: '/etc/pki/tls/certs/metrics_qdr.crt'
          #             keyFile: '/etc/pki/tls/private/metrics_qdr.key'
# # This is already in ansible as tripleo_internal_tlscafile
          #             caCertFile: {get_param: InternalTLSCAFile}
          #   - tripleo::profile::base::metrics::qdr::ssl_profiles: {get_param: MetricsQdrSSLProfiles}
          # - if:
          #   - enable_stf
          #   - tripleo::profile::base::metrics::qdr::interior_mesh_nodes: ''
          #     tripleo::profile::base::metrics::qdr::router_mode: edge
          #   - null

- name: Set logging params
  set_fact:
# *CS TODO: Get these fed through as new QdrVars, right now there is no good way to alter them
    log_enable: 'info+'
    log_output: '/var/log/qdrouterd/metrics_qdr.log'


# *CS TODO: Re-structure these to be logical tasks, not stage-based, and have tripleo do `tasks_from` instead of `include_role`, let tripleo define the stages and which tasks to run in each, tripleo-qdr-ansible-role should not know about stages
- name: Include tasks for deploy stage
  include_tasks: "{{ deploy_stage }}.yml"
