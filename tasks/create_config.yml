---
# These tasks are responsible for the following tripleo-driven additions to the qdr config:
#
# 1) Mesh mode - Controllers form a QDR mesh which connects to the external endpoint, all other nodes connect to the mesh
# 2) TLS Everywhere - Enabling SSL for mesh-to-mesh and edge-to-mesh connections

- name: Get a mutable version of the connectors so we can supress it on edge nodes if controller-mesh is enabled
  set_fact:
    connectors: "{{ qdr_connectors }}"

# *CS
# Q1. Alex Schultz suggested I consider moving this (computation of listener_addr) back to THT. It's so much more readable and testable here.
#     Comments?
# A1. Emma thinks it belongs here because it came from the output part of THT
# Q2. I added a snake_case filter to help with changing tripleo_role_name == "CephStorage" into ceph_storage. I was
#     looking for the code that does the initial conversion so I could hopefully reuse it or at least behave the same.
# A2. Emma has a third implementation[1] but it is not the one I need to match
#     [1] https://github.com/infrawatch/tripleo-ansible-conversion-starter/blob/master/templates/macros.yml
- name: Set listener address based on ServiceNetMap
  set_fact:
    listener_addr: "{{ lookup('vars', service_net_map[ (tripleo_role_name + 'MetricsQdrNetwork') | snake_case] + '_ip' ) }}"

- name: Handle EnableInternalTLS
  when: tripleo_enable_internal_tls
  block:
    - name: Augment extra_ssl_profiles with internal profile
      set_fact:
        extra_ssl_profiles: "{{ extra_ssl_profiles +
                        [{ 'name': 'tlsProfile',
                            'certFile': qdr_listener_ssl_cert_file,
                            'keyFile': qdr_listener_ssl_key_file,
                            'caCertFile': tripleo_internal_tlscafile
                          }] }}"

- name: Set logging params
  set_fact:
    # *CS TODO: Get this fed through in QdrVars, right now there is no good way to alter it
    log_enable: 'info+'

- name: Configure the mesh mode settings if requested
  when: qdr_deployment_mode == 'controller-mesh'
  block:

  - name: Set the list of interior mesh nodes
    set_fact:
      interior_nodes_list: "{{ controller_node_ips.split(',') }}"

  # TODO(BZ1816046): metrics should have it's own network, and not use ctlplane.
  - name: Set interior IP for mesh mode connections to use ctlplane
    set_fact:
      interior_ip: "{{ ctlplane_ip }}"

  - name: Define connectors for edge -> interior, replacing existing connectors
    when: not (interior_ip in interior_nodes_list)
    block:
      - name: Remove existing connector
        set_fact:
          connectors: []

      - name: Create connectors to to two random interior nodes
        loop: "{{ (interior_nodes_list | shuffle(seed=inventory_hostname))[0:2] }}"
        set_fact:
        # *CS TODO: Add the SSL support to mesh mode like node_base from the puppet (internal_tls), see https://github.com/openstack/puppet-tripleo/blob/432b0497f7d0d051f2b4bf34c3e841f2b97bbb44/manifests/profile/base/metrics/qdr.pp#L141
          connectors: "{{ connectors + [{
                        'host': item,
                        'port': '5668',
                        'role': 'edge',
                        'verifyHostname': 'no',
                        'saslMechanisms': 'ANONYMOUS'
                      }] }}"

  - name: Set additional listeners, connectors, and mode on interior mesh nodes
    when: interior_ip in interior_nodes_list
    block:
      - name: Set mode to interior
        set_fact:
          router_mode: interior

      - name: Set list of OTHER interior nodes with which to form mesh connections (ones with a lower ordinal position than us in the list)
        set_fact:
          mesh_connection_nodes_list: "{{ interior_nodes_list[0:interior_nodes_list.index(interior_ip)] }}"

      - name: Add extra listener for edge -> interior
        set_fact:
          # *CS TODO: Add the SSL support to mesh mode like node_base from the puppet (internal_tls), see https://github.com/openstack/puppet-tripleo/blob/432b0497f7d0d051f2b4bf34c3e841f2b97bbb44/manifests/profile/base/metrics/qdr.pp#L141
          extra_listeners:  "{{ extra_listeners + [{
                        'host': interior_ip,
                        'port': '5668',
                        'role': 'edge',
                        'authenticatePeer': 'no',
                        'saslMechanisms': 'ANONYMOUS'}]
                      }}"

      - name: Add extra listener mesh connections
        set_fact:
          # *CS TODO: Add the SSL support to mesh mode like node_base from the puppet (internal_tls), see https://github.com/openstack/puppet-tripleo/blob/432b0497f7d0d051f2b4bf34c3e841f2b97bbb44/manifests/profile/base/metrics/qdr.pp#L141
          extra_listeners:  "{{ extra_listeners + [{
                        'host': interior_ip,
                        'port': '5667',
                        'role': 'inter-router',
                        'authenticatePeer': 'no',
                        'saslMechanisms': 'ANONYMOUS'}]
                      }}"

      - name: Add mesh connections
        loop: "{{ mesh_connection_nodes_list }}"
        set_fact:
          # *CS TODO: Add the SSL support to mesh mode like node_base from the puppet (internal_tls), see https://github.com/openstack/puppet-tripleo/blob/432b0497f7d0d051f2b4bf34c3e841f2b97bbb44/manifests/profile/base/metrics/qdr.pp#L141
          connectors: "{{ connectors + [{
                        'host': item,
                        'port': '5667',
                        'role': 'inter-router',
                        'verifyHostname': 'no',
                        'saslMechanisms': 'ANONYMOUS'}]
                      }}"
# End of mesh-mode block

- name: "Include QDR config role"
  block:
    - name: "Generate the qdr config files"
      include_role:
        name: qdr_config
      vars:
        # These vars are passed through from tripleo unchanged
        # *CS TODO: Hopefully I can eliminate all but one line of this block (connections) by aligning the names in qdr_config
        addresses: "{{ qdr_addresses }}"
        autolink_addresses: "{{ qdr_autolink_addresses }}"
        listener_auth_peer: "{{ qdr_listener_auth_peer }}"
        listener_port: "{{ qdr_listener_port }}"
        listener_require_ssl: "{{ qdr_listener_require_ssl }}"
        listener_sasl_mech: "{{ qdr_listener_sasl_mech }}"
        listener_ssl_cert_db: "{{ qdr_listener_ssl_cert_db }}"
        listener_ssl_cert_file: "{{ qdr_listener_ssl_cert_file }}"
        listener_ssl_key_file: "{{ qdr_listener_ssl_key_file }}"
        listener_ssl_password: "{{ qdr_listener_ssl_password }}"
        listener_ssl_pw_file: "{{ qdr_listener_ssl_pw_file }}"
        listener_trusted_certs: "{{ qdr_listener_trusted_certs }}"
        log_output: "{{ qdr_log_output }}"
        password: "{{ qdr_password }}"
        ssl_profiles: "{{ qdr_ssl_profiles }}"
        username: "{{ qdr_username }}"
